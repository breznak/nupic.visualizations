angular.module("app",["ui.bootstrap"]),angular.module("app").constant("appConfig",{TIMESTAMP:"timestamp",POSSIBLE_OPF_DATA_FIELDS:["multiStepPredictions.actual","multiStepBestPredictions.actual"],EXCLUDE_FIELDS:[],HEADER_SKIPPED_ROWS:2,ZOOM:"HighlightSelector",NONE_VALUE_REPLACEMENT:0}),angular.module("app").controller("appCtrl",["$scope","$timeout","appConfig",function(e,i,n){e.view={fieldState:[],graph:null,canRender:!1,dataField:null,optionsVisible:!0,loadedFileName:"",renderedFileName:"",errors:[]};var t,a,l,r=[],o=[],d={};e.toggleOptions=function(){e.view.optionsVisible=!e.view.optionsVisible,e.view.graph&&(d.resize=i(function(){e.view.graph.resize()}))},e.uploadFile=function(i){e.view.canRender=!1,e.view.loadedFileName=i.target.files[0].name,r.length=0,o.length=0,Papa.parse(i.target.files[0],{skipEmptyLines:!0,header:!0,dynamicTyping:!0,complete:function(i){s(i.data),e.view.canRender=r.length>0?!0:!1,e.$apply()},error:function(e){u(e,"danger")}})};var u=function(i,n,t){if(t="undefined"!=typeof t?t:!1,exists=!1,t){errs=e.view.errors;for(var a=0;a<errs.length;a++)if(errs.i.message===i)return}e.view.errors.push({message:i,type:n})};e.clearErrors=function(){e.view.errors.length=0},e.clearError=function(i){e.view.errors.splice(i,1)};var s=function(e){e.splice(0,n.HEADER_SKIPPED_ROWS);var i=c(e[e.length-1],n.EXCLUDE_FIELDS);if(null===i)return u("Failed to parse the uploaded CSV file!","danger"),null;for(var t=0;t<e.length;t++){for(var a=[],l=0;l<o.length;l++){var d=e[t][o[l]];0===l?("number"==typeof d?date=d:"string"==typeof d&&(date=f(d)),null!==date?d=date:null===date&&"number"==typeof d?u("Parsing timestamp failed, fallback to x-data","warning",!0):(u("Parsing timestamp failed & it is non-numeric, fallback to using iteration number","warning",!0),d=t)):"None"===d&&(d=n.NONE_VALUE_REPLACEMENT),a.push(d)}r.push(a)}},f=function(e){var i=new Date(e);if("Invalid Date"!==i.toString())return i;var n=String(e).split(" "),t=[],a=n[0].split("/"),l=n[0].split("-");if(1===a.length&&1===l.length||a.length>1&&l.length>1)return u("Could not parse the timestamp","warning",!0),null;if(l.length>2)t.push(l[0]),t.push(l[1]),t.push(l[2]);else{if(!(a.length>2))return u("There was something wrong with the date in the timestamp field.","warning",!0),null;t.push(a[2]),t.push(a[0]),t.push(a[1])}if(n[1]){var r=n[1].split(":");t=t.concat(r)}for(var o=0;o<t.length;o++)t[o]=parseInt(t[o]);return i=new Function.prototype.bind.apply(Date,[null].concat(t)),"Invalid Date"===i.toString()?(u("The timestamp appears to be invalid.","warning",!0),null):i};e.normalizeField=function(i){var n=i+1;if(null===e.view.dataField)return void console.warn("No data field is set");for(var a=parseInt(e.view.dataField)+1,l=function(e,i){return Math[i].apply(null,e)},r=[],o=[],d=0;d<t.length;d++)"number"==typeof t[d][a]&&"number"==typeof t[d][n]&&(r.push(t[d][a]),o.push(t[d][n]));for(var u=l(r,"max")-l(r,"min"),s=l(o,"max")-l(o,"min"),f=u/s,p=0;p<t.length;p++)t[p][n]=parseFloat((t[p][n]*f).toFixed(10));e.view.graph.updateOptions({file:t})},e.denormalizeField=function(i){for(var n=i+1,a=0;a<t.length;a++)t[a][n]=l[a][n];e.view.graph.updateOptions({file:t})},e.renormalize=function(){for(var i=0;i<e.view.fieldState.length;i++)e.view.fieldState[i].normalized&&e.normalizeField(e.view.fieldState[i].id)};var p=function(i){for(var n=0;n<i.length;n++)e.view.fieldState[n].color=i[n]},g=function(i){for(var n=0;n<e.view.fieldState.length;n++)if(i.indexOf(e.view.fieldState[n].name)>-1){e.view.dataField=e.view.fieldState[n].id;break}},c=function(e,i){return e.hasOwnProperty(n.TIMESTAMP)?(angular.forEach(e,function(e,t){"number"==typeof e&&-1===i.indexOf(t)&&t!==n.TIMESTAMP&&o.push(t)}),o.unshift(n.TIMESTAMP),o):(u("No timestamp field was found","warning"),null)};e.toggleVisibility=function(i){e.view.graph.setVisibility(i.id,i.visible),i.visible||(i.value=null)},e.showHideAll=function(i){for(var n=0;n<e.view.fieldState.length;n++)e.view.fieldState[n].visible=i,e.view.graph.setVisibility(e.view.fieldState[n].id,i),i||(e.view.fieldState[n].value=null)},e.renderData=function(){var i=document.getElementById("dataContainer");t=angular.copy(r),l=angular.copy(r),a=angular.copy(o),e.view.renderedFileName=e.view.loadedFileName,e.view.fieldState.length=0,e.view.dataField=null;for(var d=0,u=0;u<a.length;u++)a[u]!==n.TIMESTAMP&&(e.view.fieldState.push({name:a[u],id:d,visible:!0,normalized:!1,value:null,color:"rgb(0,0,0)"}),d++);g(n.POSSIBLE_OPF_DATA_FIELDS),e.view.graph=new Dygraph(i,t,{labels:a,labelsUTC:!1,showLabelsOnHighlight:!1,xlabel:"Time",ylabel:"Values",strokeWidth:1,drawCallback:function(e,i){i&&p(e.getColors())}}),document.getElementById("renderButton").blur()},e.$on("$destroy",function(){angular.forEach(d,function(e){i.cancel(e)})})}]),angular.module("app").directive("fileUploadChange",function(){return{restrict:"A",link:function(e,i,n){var t=e.$eval(n.fileUploadChange);i.bind("change",t),e.$on("$destroy",function(){i.unbind()})}}}),angular.module("app").directive("normalizeFields",function(){return{restrict:"A",scope:!1,template:'<td><input type="checkbox" ng-disabled="field.id === view.dataField || view.dataField === null" ng-model="field.normalized"></td><td><input type="radio" ng-disabled="field.normalized" ng-model="view.dataField" ng-value="{{field.id}}"></td>',link:function(e,i,n){var t={};t.normalized=e.$watch("field.normalized",function(i,n){i?e.normalizeField(e.field.id):i||i===n||e.denormalizeField(e.field.id)}),t.isData=e.$watch("view.dataField",function(){e.renormalize()}),e.$on("$destroy",function(){angular.forEach(t,function(e){e()})})}}});